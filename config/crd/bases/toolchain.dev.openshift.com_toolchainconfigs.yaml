---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.10.0
  creationTimestamp: null
  name: toolchainconfigs.toolchain.dev.openshift.com
spec:
  group: toolchain.dev.openshift.com
  names:
    kind: ToolchainConfig
    listKind: ToolchainConfigList
    plural: toolchainconfigs
    singular: toolchainconfig
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.host.automaticApproval.enabled
      name: AutomaticApproval
      type: boolean
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: ToolchainConfig keeps all configuration parameters needed for
          host and member operators
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: ToolchainConfigSpec contains all configuration for host and
              member operators
            properties:
              host:
                description: Contains all host operator configuration
                properties:
                  automaticApproval:
                    description: Keeps parameters necessary for automatic approval
                    properties:
                      enabled:
                        description: Defines if the automatic approval is enabled
                          or not
                        type: boolean
                    type: object
                  capacityThresholds:
                    description: 'Keeps parameters necessary for configuring capacity
                      limits Deprecated: This is no longer used for anything.'
                    properties:
                      maxNumberOfSpacesPerMemberCluster:
                        additionalProperties:
                          type: integer
                        description: 'Contains a map of maximal number of spaces that
                          can be provisioned per member cluster mapped by the cluster
                          name Deprecated: This is no longer used for anything.'
                        type: object
                        x-kubernetes-map-type: atomic
                      resourceCapacityThreshold:
                        description: 'Contains capacity threshold configuration Deprecated:
                          This is no longer used for anything.'
                        properties:
                          defaultThreshold:
                            description: It is the default capacity threshold (in
                              percentage of usage) to be used for all member clusters
                              if no special threshold is defined
                            type: integer
                          specificPerMemberCluster:
                            additionalProperties:
                              type: integer
                            description: Contains a map of specific capacity thresholds
                              (in percentage of usage) for particular member clusters
                              mapped by their names
                            type: object
                            x-kubernetes-map-type: atomic
                        type: object
                    type: object
                  deactivation:
                    description: Keeps parameters concerned with user deactivation
                    properties:
                      deactivatingNotificationDays:
                        description: DeactivatingNotificationDays is the number of
                          days after a pre-deactivating notification is sent that
                          actual deactivation occurs.  If this parameter is set to
                          zero, then there will be no delay
                        type: integer
                      deactivationDomainsExcluded:
                        description: 'DeactivationDomainsExcluded is a string of comma-separated
                          domains that should be excluded from automatic user deactivation
                          For example: "@redhat.com,@ibm.com"'
                        type: string
                      userSignupDeactivatedRetentionDays:
                        description: UserSignupDeactivatedRetentionDays is used to
                          configure how many days we should keep deactivated UserSignup
                          resources before deleting them.  This parameter value should
                          reflect an extended period of time sufficient for gathering
                          user metrics before removing the resources from the cluster.
                        type: integer
                      userSignupUnverifiedRetentionDays:
                        description: UserSignupUnverifiedRetentionDays is used to
                          configure how many days we should keep unverified (i.e.
                          the user hasn't completed the user verification process
                          via the registration service) UserSignup resources before
                          deleting them.  It is intended for this parameter to define
                          an aggressive cleanup schedule for unverified user signups,
                          and the default configuration value for this parameter reflects
                          this.
                        type: integer
                    type: object
                  environment:
                    description: Environment specifies the host-operator environment
                      such as prod, stage, unit-tests, e2e-tests, dev, etc
                    type: string
                  metrics:
                    description: Keeps parameters concerned with metrics
                    properties:
                      forceSynchronization:
                        description: ForceSynchronization is a flag used to trigger
                          synchronization of the metrics based on the resources rather
                          than on the content of `ToolchainStatus.status.metrics`
                        type: boolean
                    type: object
                  notifications:
                    description: Keeps parameters concerned with notifications
                    properties:
                      adminEmail:
                        description: The administrator email address for system notifications
                        type: string
                      durationBeforeNotificationDeletion:
                        description: DurationBeforeNotificationDeletion is notification
                          delivery service to use for notifications
                        type: string
                      notificationDeliveryService:
                        description: NotificationDeliveryService is notification delivery
                          service to use for notifications
                        type: string
                      secret:
                        description: Defines all secrets related to notification configuration
                        properties:
                          mailgunAPIKey:
                            description: The key for the host operator mailgun api
                              key used for creating an instance of mailgun
                            type: string
                          mailgunDomain:
                            description: The key for the host operator mailgun domain
                              used for creating an instance of mailgun
                            type: string
                          mailgunReplyToEmail:
                            description: The key for the reply-to email address that
                              will be set in sent notifications
                            type: string
                          mailgunSenderEmail:
                            description: The key for the host operator mailgun senders
                              email
                            type: string
                          ref:
                            description: Reference is the name of the secret resource
                              to look up
                            type: string
                        type: object
                      templateSetName:
                        description: TemplateSetName defines the set of notification
                          templates. Different Sandbox instances can use different
                          notification templates. For example Dev Sandbox and AppStudio
                          instances use different templates. By default, the "sandbox"
                          template set name is used.
                        type: string
                    type: object
                  registrationService:
                    description: Keeps parameters necessary for the registration service
                    properties:
                      analytics:
                        description: Keeps parameters necessary for the registration
                          service analytics config
                        properties:
                          devSpaces:
                            description: DevSpaces contains the analytics configuration
                              parameters for devspaces
                            properties:
                              segmentWriteKey:
                                description: SegmentWriteKey specifies the segment
                                  write key
                                type: string
                            type: object
                          segmentWriteKey:
                            description: SegmentWriteKey specifies the segment write
                              key for sandbox
                            type: string
                        type: object
                      auth:
                        description: Keeps parameters necessary for the registration
                          service authentication config
                        properties:
                          authClientConfigContentType:
                            description: AuthClientConfigContentType specifies the
                              auth config content type
                            type: string
                          authClientConfigRaw:
                            description: AuthClientConfigRaw specifies the URL used
                              to access the registration service
                            type: string
                          authClientLibraryURL:
                            description: AuthClientLibraryURL specifies the auth library
                              location
                            type: string
                          authClientPublicKeysURL:
                            description: AuthClientPublicKeysURL specifies the public
                              keys URL
                            type: string
                          ssoBaseURL:
                            description: SSOBaseURL specifies the SSO base URL such
                              as https://sso.redhat.com
                            type: string
                          ssoRealm:
                            description: SSORealm specifies the SSO realm name
                            type: string
                        type: object
                      environment:
                        description: Environment specifies the environment such as
                          prod, stage, unit-tests, e2e-tests, dev, etc
                        type: string
                      logLevel:
                        description: LogLevel specifies the logging level
                        type: string
                      namespace:
                        description: Namespace specifies the namespace in which the
                          registration service and host operator is running Consumed
                          by host operator and set as env var on registration-service
                          deployment
                        type: string
                      registrationServiceURL:
                        description: RegistrationServiceURL is the URL used to a ccess
                          the registration service
                        type: string
                      replicas:
                        description: Replicas specifies the number of replicas to
                          use for the registration service deployment
                        format: int32
                        type: integer
                      verification:
                        description: Keeps parameters necessary for the registration
                          service verification config
                        properties:
                          attemptsAllowed:
                            description: VerificationAttemptsAllowed specifies the
                              number of times a user may attempt to correctly enter
                              a verification code, if they fail then they must request
                              another code
                            type: integer
                          awsRegion:
                            description: AWSRegion to use when sending notification
                              SMS
                            type: string
                          awsSMSType:
                            description: AWSSMSType is the type of SMS message to
                              send, either `Promotional` or `Transactional` See https://docs.aws.amazon.com/sns/latest/dg/sms_publish-to-phone.html
                              for details
                            type: string
                          awsSenderID:
                            description: AWSSenderID the Alphanumeric Sender ID to
                              use, e.g. "DevSandbox"
                            type: string
                          captcha:
                            description: Captcha defines any configuration related
                              to captcha verification
                            properties:
                              allowLowScoreReactivation:
                                description: AllowLowScoreReactivation specifies whether
                                  the reactivation for users with low captcha score
                                  (below the RequiredScore) is enabled without the
                                  need for manual approval.
                                type: boolean
                              enabled:
                                description: Enabled specifies whether the captcha
                                  verification feature is enabled or not
                                type: boolean
                              projectID:
                                description: ProjectID defines the GCP project ID
                                  that has the recaptcha service enabled.
                                type: string
                              requiredScore:
                                description: RequiredScore defines the lowest captcha
                                  score, below this score the user cannot proceed
                                  with the signup process at all. Users with captcha
                                  score lower than the required one can still be approved
                                  manually.
                                type: string
                              scoreThreshold:
                                description: ScoreThreshold defines the captcha assessment
                                  score threshold. A score equal to or above the threshold
                                  means the user is most likely human and can proceed
                                  signing up but a score below the threshold means
                                  the score is suspicious and further verification
                                  may be required.
                                type: string
                              siteKey:
                                description: SiteKey defines the recaptcha site key
                                  to use when making recaptcha requests. There can
                                  be different ones for different environments. eg.
                                  dev, stage, prod
                                type: string
                            type: object
                          codeExpiresInMin:
                            description: VerificationCodeExpiresInMin specifies an
                              int representing the number of minutes before a verification
                              code should be expired
                            type: integer
                          dailyLimit:
                            description: VerificationDailyLimit specifies the number
                              of times a user may initiate a phone verification request
                              within a 24 hour period
                            type: integer
                          enabled:
                            description: 'VerificationEnabled specifies whether verification
                              is enabled or not Verification enablement works in the
                              following way: 1. verification.enabled == false No verification
                              during the signup process at all. (no phone, no captcha)
                              2. verification.enabled == true && verification.captcha.enabled
                              == true Captcha is enabled and will bypass phone verification
                              if the score is above the threshold but if the score
                              is below the threshold then phone verification kicks
                              in. 3. verification.enabled == true && verification.captcha.enabled
                              == false Only phone verification is effect.'
                            type: boolean
                          excludedEmailDomains:
                            description: VerificationExcludedEmailDomains specifies
                              the list of email address domains for which phone verification
                              is not required
                            type: string
                          messageTemplate:
                            description: VerificationMessageTemplate specifies the
                              message template used to generate the content sent to
                              users via SMS for phone verification
                            type: string
                          notificationSender:
                            description: NotificationSender is used to specify which
                              service should be used to send verification notifications.
                              Allowed values are "twilio", "aws".  If not specified,
                              the Twilio sender will be used.
                            type: string
                          secret:
                            description: Defines all secrets related to the registration
                              service verification configuration
                            properties:
                              awsAccessKeyID:
                                description: AWSAccessKeyId is the AWS Access Key
                                  used to authenticate in order to access AWS services
                                type: string
                              awsSecretAccessKey:
                                description: AWSSecretAccessKey is the AWS credential
                                  used to authenticate in order to access AWS services
                                type: string
                              recaptchaServiceAccountFile:
                                description: RecaptchaServiceAccountFile is the GCP
                                  service account file contents encoded in base64,
                                  it is to be used with the recaptcha client for authentication
                                type: string
                              ref:
                                description: Reference is the name of the secret resource
                                  to look up
                                type: string
                              twilioAccountSID:
                                description: TwilioAccountSID specifies the Twilio
                                  account identifier, used for sending phone verification
                                  messages
                                type: string
                              twilioAuthToken:
                                description: TwilioAuthToken specifies the Twilio
                                  authentication token, used for sending phone verification
                                  messages
                                type: string
                              twilioFromNumber:
                                description: TwilioFromNumber specifies the phone
                                  number or alphanumeric "Sender ID" for sending phone
                                  verification messages
                                type: string
                            type: object
                          twilioSenderConfigs:
                            description: TwilioSenderConfigs is an array of TwilioSenderConfig
                              objects
                            items:
                              description: "TwilioSenderConfig is used to associate
                                a particular sender ID (a sender ID is a text value
                                that appears instead of a phone number when receiving
                                an SMS message), for example \"RED HAT\", with an
                                array of country code values for which the Sender
                                ID value will be set via the Twilio API when sending
                                a verification code to a user in any of the country
                                codes specified. \n Since some countries are starting
                                to block long form phone numbers (i.e. SMS messages
                                from international phone numbers) the Sender ID may
                                be an acceptable alternative to requiring the verification
                                message to be sent from a local phone number."
                              properties:
                                countryCodes:
                                  description: CountryCodes
                                  items:
                                    type: string
                                  type: array
                                  x-kubernetes-list-type: set
                                senderID:
                                  description: SenderID
                                  type: string
                              required:
                              - senderID
                              type: object
                            type: array
                            x-kubernetes-list-type: atomic
                        type: object
                    type: object
                  spaceConfig:
                    description: Keeps parameters necessary for configuring Space
                      provisioning functionality
                    properties:
                      spaceBindingRequestEnabled:
                        description: SpaceBindingRequestEnabled specifies whether
                          the SpaceBindingRequest controller should start or not.
                          This is specifically useful in order to enable/disable this
                          functionality from configuration (e.g. disabled by default
                          in Sandbox and enabled only for AppStudio stage/prod ...).
                        type: boolean
                      spaceRequestEnabled:
                        description: SpaceRequestEnabled specifies whether the SpaceRequest
                          controller should start or not. This is specifically useful
                          in order to enable/disable this functionality from configuration
                          (e.g. disabled by default in Sandbox and enabled only for
                          AppStudio stage/prod ...).
                        type: boolean
                    type: object
                  tiers:
                    description: Keeps parameters concerned with tiers
                    properties:
                      defaultSpaceTier:
                        description: DefaultSpaceTier specifies the default tier to
                          assign for new spaces
                        type: string
                      defaultUserTier:
                        description: DefaultUserTier specifies the default tier to
                          assign for new users
                        type: string
                      durationBeforeChangeTierRequestDeletion:
                        description: DurationBeforeChangeTierRequestDeletion specifies
                          the duration before a ChangeTierRequest resource is deleted
                        type: string
                      templateUpdateRequestMaxPoolSize:
                        description: TemplateUpdateRequestMaxPoolSize specifies the
                          maximum number of concurrent TemplateUpdateRequests when
                          updating MasterUserRecords
                        type: integer
                    type: object
                  toolchainStatus:
                    description: Keeps parameters concerned with the toolchainstatus
                    properties:
                      gitHubSecret:
                        description: Defines all secrets related to GitHub authentication/integration
                        properties:
                          accessTokenKey:
                            description: The key for the GitHub Access token in the
                              secret values map
                            type: string
                          ref:
                            description: Reference is the name of the secret resource
                              to look up
                            type: string
                        type: object
                      toolchainStatusRefreshTime:
                        description: ToolchainStatusRefreshTime specifies how often
                          the ToolchainStatus should load and refresh the current
                          hosted-toolchain status
                        type: string
                    type: object
                  users:
                    description: Keeps parameters concerned with user management
                    properties:
                      forbiddenUsernamePrefixes:
                        description: ForbiddenUsernamePrefixes is a comma-separated
                          string that defines the prefixes that a username may not
                          have when signing up. If a username has a forbidden prefix,
                          then the username compliance prefix is added to the username
                        type: string
                      forbiddenUsernameSuffixes:
                        description: ForbiddenUsernameSuffixes is a comma-separated
                          string that defines the suffixes that a username may not
                          have when signing up.  If a username has a forbidden suffix,
                          then the username compliance suffix is added to the username
                        type: string
                      masterUserRecordUpdateFailureThreshold:
                        description: MasterUserRecordUpdateFailureThreshold specifies
                          the number of allowed failures before stopping attempts
                          to update a MasterUserRecord
                        type: integer
                    type: object
                type: object
              members:
                description: Contains all member operator configurations for all member
                  clusters
                properties:
                  default:
                    description: Defines default configuration to be applied to all
                      member clusters
                    properties:
                      auth:
                        description: Keeps parameters concerned with authentication
                        properties:
                          idp:
                            description: Represents the configured identity provider
                            type: string
                        type: object
                      autoscaler:
                        description: Keeps parameters concerned with the autoscaler
                        properties:
                          bufferMemory:
                            description: Represents how much memory should be required
                              by the autoscaler buffer
                            type: string
                          bufferReplicas:
                            description: Represents the number of autoscaler buffer
                              replicas to request
                            type: integer
                          deploy:
                            description: Defines the flag that determines whether
                              to deploy the autoscaler buffer
                            type: boolean
                        type: object
                      che:
                        description: Keeps parameters concerned with Che/CRW
                        properties:
                          keycloakRouteName:
                            description: Defines the Che/CRW Keycloak route name
                            type: string
                          namespace:
                            description: Defines the Che/CRW operator namespace
                            type: string
                          required:
                            description: Defines a flag that indicates whether the
                              Che/CRW operator is required to be installed on the
                              cluster. May be used in monitoring.
                            type: boolean
                          routeName:
                            description: Defines the Che/CRW route name
                            type: string
                          secret:
                            description: Defines all secrets related to Che configuration
                            properties:
                              cheAdminPasswordKey:
                                description: The key for the Che admin password in
                                  the secret values map
                                type: string
                              cheAdminUsernameKey:
                                description: The key for the Che admin username in
                                  the secret values map
                                type: string
                              ref:
                                description: Reference is the name of the secret resource
                                  to look up
                                type: string
                            type: object
                          userDeletionEnabled:
                            description: Defines a flag to turn the Che user deletion
                              logic on/off
                            type: boolean
                        type: object
                      console:
                        description: Keeps parameters concerned with the console
                        properties:
                          namespace:
                            description: Defines the console route namespace
                            type: string
                          routeName:
                            description: Defines the console route name
                            type: string
                        type: object
                      environment:
                        description: Environment specifies the member-operator environment
                          such as prod, stage, unit-tests, e2e-tests, dev, etc
                        type: string
                      memberStatus:
                        description: Keeps parameters concerned with member status
                        properties:
                          gitHubSecret:
                            description: Defines all secrets related to GitHub authentication/integration
                            properties:
                              accessTokenKey:
                                description: The key for the GitHub Access token in
                                  the secret values map
                                type: string
                              ref:
                                description: Reference is the name of the secret resource
                                  to look up
                                type: string
                            type: object
                          refreshPeriod:
                            description: Defines the period between refreshes of the
                              member status
                            type: string
                        type: object
                      skipUserCreation:
                        description: Defines the flag that determines whether User
                          and Identity resources should be created for a UserAccount
                        type: boolean
                      toolchainCluster:
                        description: Keeps parameters concerned with the toolchaincluster
                        properties:
                          healthCheckPeriod:
                            description: Defines the period in between health checks
                            type: string
                          healthCheckTimeout:
                            description: Defines the timeout for each health check
                            type: string
                        type: object
                      webConsolePlugin:
                        description: WebConsolePlugin is used to configure the Web
                          Console Plugin parameters
                        properties:
                          deploy:
                            description: Deploy determines whether the plugin will
                              be deployed or not
                            type: boolean
                          pendoHost:
                            description: PendoHost allows a host URL to be configured
                              instead of communicating directly with the Pendo domain
                            type: string
                          pendoKey:
                            description: PendoKey is the key value used to interact
                              with the Pendo API
                            type: string
                        type: object
                      webhook:
                        description: Keeps parameters concerned with the webhook
                        properties:
                          deploy:
                            description: Defines the flag that determines whether
                              to deploy the Webhook
                            type: boolean
                          secret:
                            description: Defines all secrets related to webhook configuration
                            properties:
                              ref:
                                description: Reference is the name of the secret resource
                                  to look up
                                type: string
                              virtualMachineAccessKey:
                                description: The key in the secret values map that
                                  contains a comma-separated list of SSH keys
                                type: string
                            type: object
                        type: object
                    type: object
                  specificPerMemberCluster:
                    additionalProperties:
                      description: MemberOperatorConfigSpec contains all configuration
                        parameters of the member operator
                      properties:
                        auth:
                          description: Keeps parameters concerned with authentication
                          properties:
                            idp:
                              description: Represents the configured identity provider
                              type: string
                          type: object
                        autoscaler:
                          description: Keeps parameters concerned with the autoscaler
                          properties:
                            bufferMemory:
                              description: Represents how much memory should be required
                                by the autoscaler buffer
                              type: string
                            bufferReplicas:
                              description: Represents the number of autoscaler buffer
                                replicas to request
                              type: integer
                            deploy:
                              description: Defines the flag that determines whether
                                to deploy the autoscaler buffer
                              type: boolean
                          type: object
                        che:
                          description: Keeps parameters concerned with Che/CRW
                          properties:
                            keycloakRouteName:
                              description: Defines the Che/CRW Keycloak route name
                              type: string
                            namespace:
                              description: Defines the Che/CRW operator namespace
                              type: string
                            required:
                              description: Defines a flag that indicates whether the
                                Che/CRW operator is required to be installed on the
                                cluster. May be used in monitoring.
                              type: boolean
                            routeName:
                              description: Defines the Che/CRW route name
                              type: string
                            secret:
                              description: Defines all secrets related to Che configuration
                              properties:
                                cheAdminPasswordKey:
                                  description: The key for the Che admin password
                                    in the secret values map
                                  type: string
                                cheAdminUsernameKey:
                                  description: The key for the Che admin username
                                    in the secret values map
                                  type: string
                                ref:
                                  description: Reference is the name of the secret
                                    resource to look up
                                  type: string
                              type: object
                            userDeletionEnabled:
                              description: Defines a flag to turn the Che user deletion
                                logic on/off
                              type: boolean
                          type: object
                        console:
                          description: Keeps parameters concerned with the console
                          properties:
                            namespace:
                              description: Defines the console route namespace
                              type: string
                            routeName:
                              description: Defines the console route name
                              type: string
                          type: object
                        environment:
                          description: Environment specifies the member-operator environment
                            such as prod, stage, unit-tests, e2e-tests, dev, etc
                          type: string
                        memberStatus:
                          description: Keeps parameters concerned with member status
                          properties:
                            gitHubSecret:
                              description: Defines all secrets related to GitHub authentication/integration
                              properties:
                                accessTokenKey:
                                  description: The key for the GitHub Access token
                                    in the secret values map
                                  type: string
                                ref:
                                  description: Reference is the name of the secret
                                    resource to look up
                                  type: string
                              type: object
                            refreshPeriod:
                              description: Defines the period between refreshes of
                                the member status
                              type: string
                          type: object
                        skipUserCreation:
                          description: Defines the flag that determines whether User
                            and Identity resources should be created for a UserAccount
                          type: boolean
                        toolchainCluster:
                          description: Keeps parameters concerned with the toolchaincluster
                          properties:
                            healthCheckPeriod:
                              description: Defines the period in between health checks
                              type: string
                            healthCheckTimeout:
                              description: Defines the timeout for each health check
                              type: string
                          type: object
                        webConsolePlugin:
                          description: WebConsolePlugin is used to configure the Web
                            Console Plugin parameters
                          properties:
                            deploy:
                              description: Deploy determines whether the plugin will
                                be deployed or not
                              type: boolean
                            pendoHost:
                              description: PendoHost allows a host URL to be configured
                                instead of communicating directly with the Pendo domain
                              type: string
                            pendoKey:
                              description: PendoKey is the key value used to interact
                                with the Pendo API
                              type: string
                          type: object
                        webhook:
                          description: Keeps parameters concerned with the webhook
                          properties:
                            deploy:
                              description: Defines the flag that determines whether
                                to deploy the Webhook
                              type: boolean
                            secret:
                              description: Defines all secrets related to webhook
                                configuration
                              properties:
                                ref:
                                  description: Reference is the name of the secret
                                    resource to look up
                                  type: string
                                virtualMachineAccessKey:
                                  description: The key in the secret values map that
                                    contains a comma-separated list of SSH keys
                                  type: string
                              type: object
                          type: object
                      type: object
                    description: A map of cluster-specific member operator configurations
                      indexed by member toolchaincluster name
                    type: object
                    x-kubernetes-map-type: atomic
                type: object
            type: object
          status:
            description: ToolchainConfigStatus defines the observed state of ToolchainConfig
            properties:
              conditions:
                description: 'Conditions is an array of the current ToolchainConfig
                  conditions Supported condition types: ConditionReady'
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transit from one status
                        to another.
                      format: date-time
                      type: string
                    lastUpdatedTime:
                      description: Last time the condition was updated
                      format: date-time
                      type: string
                    message:
                      description: Human readable message indicating details about
                        last transition.
                      type: string
                    reason:
                      description: (brief) reason for the condition's last transition.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              syncErrors:
                additionalProperties:
                  type: string
                description: SyncErrors is a map of sync errors indexed by toolchaincluster
                  name that indicates whether an attempt to sync configuration to
                  a member cluster failed
                type: object
                x-kubernetes-map-type: atomic
            type: object
        type: object
        x-kubernetes-preserve-unknown-fields: true
    served: true
    storage: true
    subresources:
      status: {}
