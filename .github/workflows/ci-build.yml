name: ci-build
on:
  push:
    branches:
      - master
    tags-ignore:
      - '*.*'
  pull_request_target:
    types: [ opened, synchronize, reopened, ready_for_review ]
    branches:
      - master

jobs:
  test-with-coverage:
    name: Test with Coverage
    runs-on: ubuntu-20.04
    steps:
    - name: Install Go
      uses: actions/setup-go@v5
      with:
        go-version: 1.20.x
    
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        ref: ${{github.event.pull_request.head.ref}}
        repository: ${{github.event.pull_request.head.repo.full_name}}
        fetch-depth: 0
    
    - name: generate
      run: |
        make generate
    
    - name: Test
      run: |
        make test-with-coverage

    - name: Upload code coverage
      uses: codecov/codecov-action@v4
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        files: ./build/_output/coverage/coverage.txt
        flags: unittests # optional
        fail_ci_if_error: true # optional (default = false)
        verbose: true # optional (default = false)
    
  golangci:
    name: GolangCI Lint
    runs-on: ubuntu-20.04
    steps:
    - name: Install Go
      uses: actions/setup-go@v5
      with:
        go-version: 1.20.x
        
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: generate
      run: |
        make generate
    
    - name: Lint
      uses: golangci/golangci-lint-action@v4
      with:
        version: v1.52.0
        skip-pkg-cache: true
        skip-build-cache: true
        args: --config=./.golangci.yml --verbose
  
  sbom:
    name: Generate SBOM
    runs-on: ubuntu-20.04
    steps:
    - name: Install Go
      uses: actions/setup-go@v5
      with:
        go-version: 1.20.x
        
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Generate SBOM
      uses: CycloneDX/gh-gomod-generate-sbom@v2
      with:
        version: v1
        args: mod -licenses -json -output -
