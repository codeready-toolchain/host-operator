apiVersion: template.openshift.io/v1
kind: Template
metadata:
  name: appstudio-tenant
objects:
- apiVersion: v1
  kind: Namespace
  metadata:
    annotations:
      openshift.io/description: ${USERNAME}
      openshift.io/display-name: ${USERNAME}
      openshift.io/requester: ${USERNAME}
    labels:
      name: ${USERNAME}-tenant
      toolchain.dev.openshift.com/workspace: ${USERNAME}
      argocd.argoproj.io/managed-by: gitops-service-argocd
    name: ${USERNAME}-tenant

# Built-n developer environment is available for all users OOTB
- apiVersion: appstudio.redhat.com/v1alpha1
  kind: Environment
  metadata:
    name: development
    namespace: ${USERNAME}-tenant
  spec:
    deploymentStrategy: AppStudioAutomated
    displayName: Development
    type: Non-POC

# Role & RoleBinding that grant limited read permissions to all SAs in member-operator namespace.
# This is needed to let Proxy read the ServiceAccounts and Secrets in this namespace.
- apiVersion: rbac.authorization.k8s.io/v1
  kind: Role
  metadata:
    name: toolchain-sa-read
    namespace: ${USERNAME}-tenant
  rules:
  - apiGroups:
    - ""
    resources:
    - secrets
    - serviceaccounts
    verbs:
    - get
    - list
  - apiGroups:
    - ""
    resources:
    - serviceaccounts/token
    verbs:
    - create
- apiVersion: rbac.authorization.k8s.io/v1
  kind: RoleBinding
  metadata:
    name: member-operator-sa-read
    namespace: ${USERNAME}-tenant
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: Role
    name: toolchain-sa-read
  subjects:
  - apiGroup: rbac.authorization.k8s.io
    kind: Group
    name: system:serviceaccounts:${MEMBER_OPERATOR_NAMESPACE}

# Quotas and default limits for not-terminating containers (regular long-running containers)
# and terminating (short-lived containers like build) containers
- apiVersion: v1
  kind: ResourceQuota
  metadata:
    name: compute-deploy
    namespace: ${USERNAME}-tenant
  spec:
    scopes:
      - NotTerminating
    hard:
      limits.cpu: "20"
      limits.memory: ${MEMORY_LIMIT}
      requests.cpu: 1750m
      requests.memory: ${MEMORY_REQUEST}
- apiVersion: v1
  kind: ResourceQuota
  metadata:
    name: compute-build
    namespace: ${USERNAME}-tenant
  spec:
    scopes:
      - Terminating
    hard:
      limits.cpu: "60"
      limits.memory: ${MEMORY_BUILD_LIMIT}
      requests.cpu: "6"
      requests.memory: ${MEMORY_BUILD_REQUEST}
- apiVersion: v1
  kind: ResourceQuota
  metadata:
    name: storage
    namespace: ${USERNAME}-tenant
  spec:
    hard:
      limits.ephemeral-storage: 50Gi
      requests.storage: 50Gi
      requests.ephemeral-storage: 50Gi
      count/persistentvolumeclaims: "12"
- apiVersion: v1
  kind: LimitRange
  metadata:
    name: resource-limits
    namespace: ${USERNAME}-tenant
  spec:
    limits:
    - type: "Container"
      default:
        cpu: 2000m
        memory: 2Gi
      defaultRequest:
        cpu: 10m
        memory: 256Mi

- apiVersion: networking.k8s.io/v1
  kind: NetworkPolicy
  metadata:
    name: allow-same-namespace
    namespace: ${USERNAME}-tenant
  spec:
    podSelector: {}
    ingress:
    - from:
      - podSelector: {}
- apiVersion: networking.k8s.io/v1
  kind: NetworkPolicy
  metadata:
    name: allow-from-openshift-ingress
    namespace: ${USERNAME}-tenant
  spec:
    ingress:
    - from:
      - namespaceSelector:
          matchLabels:
            network.openshift.io/policy-group: ingress
    podSelector: {}
    policyTypes:
    - Ingress
- apiVersion: networking.k8s.io/v1
  kind: NetworkPolicy
  metadata:
    name: allow-from-openshift-monitoring
    namespace: ${USERNAME}-tenant
  spec:
    ingress:
    - from:
      - namespaceSelector:
          matchLabels:
            network.openshift.io/policy-group: monitoring
    podSelector: {}
    policyTypes:
    - Ingress
- apiVersion: networking.k8s.io/v1
  kind: NetworkPolicy
  metadata:
    name: allow-from-codeready-workspaces-operator
    namespace: ${USERNAME}-tenant
  spec:
    ingress:
    - from:
      - namespaceSelector:
          matchLabels:
            network.openshift.io/policy-group: codeready-workspaces
    podSelector: {}
    policyTypes:
    - Ingress
- apiVersion: networking.k8s.io/v1
  kind: NetworkPolicy
  metadata:
    name: allow-from-olm-namespaces
    namespace: ${USERNAME}-tenant
  spec:
    ingress:
    - from:
      - namespaceSelector:
          matchLabels:
            openshift.io/scc: anyuid
    podSelector: {}
    policyTypes:
    - Ingress
- apiVersion: networking.k8s.io/v1
  kind: NetworkPolicy
  metadata:
    name: allow-from-console-namespaces
    namespace: ${USERNAME}-tenant
  spec:
    ingress:
    - from:
      - namespaceSelector:
          matchLabels:
            network.openshift.io/policy-group: console
    podSelector: {}
    policyTypes:
    - Ingress
parameters:
- name: USERNAME
  required: true
- name: MEMBER_OPERATOR_NAMESPACE
  value: toolchain-member-operator
- name: MEMORY_LIMIT
  value: "32Gi"
- name: MEMORY_REQUEST
  value: "32Gi"
- name: MEMORY_BUILD_LIMIT
  value: "64Gi"
- name: MEMORY_BUILD_REQUEST
  value: "32Gi"
