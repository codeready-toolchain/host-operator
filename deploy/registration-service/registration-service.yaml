kind: Template
apiVersion: v1
metadata:
  name: registration-service
objects:
  - apiVersion: v1
    kind: ServiceAccount
    metadata:
      labels:
        provider: codeready-toolchain
      name: registration-service
      namespace: ${NAMESPACE}
  - kind: Role
    apiVersion: rbac.authorization.k8s.io/v1
    metadata:
      labels:
        provider: codeready-toolchain
      name: registration-service
      namespace: ${NAMESPACE}
    rules:
    - apiGroups:
      - toolchain.dev.openshift.com
      resources:
      - usersignups
      verbs:
      - create
      - get
    - apiGroups:
      - toolchain.dev.openshift.com
      resources:
      - masteruserrecords
      verbs:
      - get
    - apiGroups:
      - toolchain.dev.openshift.com
      resources:
      - bannedusers
      verbs:
      - get
      - list
    - apiGroups:
      - ""
      resources:
      - configmaps
      - secrets
      verbs:
      - get
      - list
  - kind: RoleBinding
    apiVersion: rbac.authorization.k8s.io/v1
    metadata:
      labels:
        provider: codeready-toolchain
      name: registration-service
      namespace: ${NAMESPACE}
    subjects:
    - kind: ServiceAccount
      name: registration-service
    roleRef:
      kind: Role
      name: registration-service
      apiGroup: rbac.authorization.k8s.io
  - kind: Deployment
    apiVersion: apps/v1
    metadata:
      labels:
        provider: codeready-toolchain
      name: registration-service
      namespace: ${NAMESPACE}
    spec:
      replicas: ${{REPLICAS}}
      selector:
        matchLabels:
          name: registration-service
      template:
        metadata:
          labels:
            name: registration-service
            run: registration-service
        spec:
          serviceAccountName: registration-service
          containers:
            - name: registration-service
              image: ${IMAGE}
              ports:
                - containerPort: 8080
              command:
                - registration-service
              imagePullPolicy: IfNotPresent
              livenessProbe:
                failureThreshold: 3
                httpGet:
                  path: /api/v1/health
                  port: 8080
                  scheme: HTTP
                initialDelaySeconds: 1
                periodSeconds: 10
                successThreshold: 1
                timeoutSeconds: 1
              readinessProbe:
                failureThreshold: 30
                httpGet:
                  path: /api/v1/health
                  port: 8080
                  scheme: HTTP
                initialDelaySeconds: 1
                periodSeconds: 1
                successThreshold: 1
                timeoutSeconds: 1
              env:
                - name: REGISTRATION_NAMESPACE
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.namespace
                - name: REGISTRATION_SERVICE_CONFIG_MAP_NAME
                  value: ${CONFIG_MAP_NAME}
                - name: REGISTRATION_SERVICE_SECRET_NAME
                  value: ${SECRET_NAME}
                - name: WATCH_NAMESPACE
                  value: ${NAMESPACE}
                - name: REGISTRATION_AUTH_CLIENT_LIBRARY_URL
                  valueFrom:
                    configMapKeyRef:
                      name: registration-service
                      key: auth_client.library_url
                - name: REGISTRATION_AUTH_CLIENT_PUBLIC_KEYS_URL
                  valueFrom:
                    configMapKeyRef:
                      name: registration-service
                      key: auth_client.public_keys_url
                - name: REGISTRATION_AUTH_CLIENT_CONFIG_RAW_REALM
                  valueFrom:
                    configMapKeyRef:
                      name: registration-service
                      key: auth_client.config_raw.realm
                - name: REGISTRATION_AUTH_CLIENT_CONFIG_RAW_AUTH_SERVER_URL
                  valueFrom:
                    configMapKeyRef:
                      name: registration-service
                      key: auth_client.config_raw.auth_server_url
                - name: REGISTRATION_AUTH_CLIENT_CONFIG_RAW_SSL_REQUIRED
                  valueFrom:
                    configMapKeyRef:
                      name: registration-service
                      key: auth_client.config_raw.ssl_required
                - name: REGISTRATION_AUTH_CLIENT_CONFIG_RAW_RESOURCE
                  valueFrom:
                    configMapKeyRef:
                      name: registration-service
                      key: auth_client.config_raw.resource
                - name: REGISTRATION_AUTH_CLIENT_CONFIG_RAW_CLIENT_ID
                  valueFrom:
                    configMapKeyRef:
                      name: registration-service
                      key: auth_client.config_raw.client_id
                - name: REGISTRATION_AUTH_CLIENT_CONFIG_RAW_PUBLIC_CLIENT
                  valueFrom:
                    configMapKeyRef:
                      name: registration-service
                      key: auth_client.config_raw.public_client
                - name: REGISTRATION_VERIFICATION_ENABLED
                  valueFrom:
                    configMapKeyRef:
                      name: registration-service
                      key: verification.enabled
                - name: REGISTRATION_VERIFICATION_DAILY_LIMIT
                  valueFrom:
                    configMapKeyRef:
                      name: registration-service
                      key: verification.daily_limit
                - name: REGISTRATION_VERIFICATION_ATTEMPTS_ALLOWED
                  valueFrom:
                    configMapKeyRef:
                      name: registration-service
                      key: verification.attempts_allowed
  - kind: Service
    apiVersion: v1
    metadata:
      name: registration-service
      namespace: ${NAMESPACE}
      labels:
        provider: codeready-toolchain
        run: registration-service
    spec:
      ports:
        - name: "8080"
          protocol: TCP
          port: 80
          targetPort: 8080
      selector:
        run: registration-service
      type: ClusterIP
      sessionAffinity: null
  - kind: Route
    apiVersion: v1
    metadata:
      labels:
        provider: codeready-toolchain
        run: registration-service
      name: registration-service
      namespace: ${NAMESPACE}
    spec:
      host: ''
      port:
        targetPort: "8080"
      to:
        kind: Service
        name: registration-service
        weight: 100
      tls:
        termination: edge
      wildcardPolicy: None
  - kind: ConfigMap
    apiVersion: v1
    metadata:
      labels:
        provider: codeready-toolchain
      name: registration-service
      namespace: ${NAMESPACE}
    type: Opaque
    data:
      environment: ${ENVIRONMENT}
      auth_client.library_url: ${AUTH_CLIENT_LIBRARY_URL}
      auth_client.public_keys_url: ${AUTH_CLIENT_PUBLIC_KEYS_URL}
      auth_client.config_raw.realm: ${AUTH_CLIENT_CONFIG_RAW_REALM}
      auth_client.config_raw.auth_server_url: ${AUTH_CLIENT_CONFIG_RAW_AUTH_SERVER_URL}
      auth_client.config_raw.ssl_required: ${AUTH_CLIENT_CONFIG_RAW_SSL_REQUIRED}
      auth_client.config_raw.resource: ${AUTH_CLIENT_CONFIG_RAW_RESOURCE}
      auth_client.config_raw.client_id: ${AUTH_CLIENT_CONFIG_RAW_CLIENT_ID}
      auth_client.config_raw.public_client: ${AUTH_CLIENT_CONFIG_RAW_PUBLIC_CLIENT}
      verification.enabled: ${VERIFICATION_ENABLED}
      verification.daily_limit: ${VERIFICATION_DAILY_LIMIT}
      verification.attempts_allowed: ${VERIFICATION_ATTEMPTS_ALLOWED}
parameters:
  - name: NAMESPACE
    value: 'toolchain-host-operator'
  - name: IMAGE
    value: quay.io/openshiftio/codeready-toolchain/registration-service:latest
  - name: REPLICAS
    value: '3'
  - name: ENVIRONMENT
    value: 'prod' # prod, stage, e2e-tests, dev, etc
  - name: CONFIG_MAP_NAME
    value: ''
  - name: SECRET_NAME
    value: ''
  - name: AUTH_CLIENT_LIBRARY_URL
    value: '' #use default value from reg-service configuration
  - name: AUTH_CLIENT_PUBLIC_KEYS_URL
    value: '' #use default value from reg-service configuration
  - name: AUTH_CLIENT_CONFIG_RAW_REALM
    value: '' #use default value from reg-service configuration
  - name: AUTH_CLIENT_CONFIG_RAW_AUTH_SERVER_URL
    value: ''
  - name: AUTH_CLIENT_CONFIG_RAW_SSL_REQUIRED
    value: ''
  - name: AUTH_CLIENT_CONFIG_RAW_RESOURCE
    value: ''
  - name: AUTH_CLIENT_CONFIG_RAW_CLIENT_ID
    value: ''
  - name: AUTH_CLIENT_CONFIG_RAW_PUBLIC_CLIENT
    value: ''
  - name: VERIFICATION_ENABLED
    value: ''
  - name: VERIFICATION_DAILY_LIMIT
    value: ''
  - name: VERIFICATION_ATTEMPTS_ALLOWED
    value: ''