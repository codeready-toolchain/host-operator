apiVersion: template.openshift.io/v1
kind: Template
metadata:
  name: registration-service
objects:
  - apiVersion: v1
    kind: ServiceAccount
    metadata:
      labels:
        provider: codeready-toolchain
      name: registration-service
      namespace: ${NAMESPACE}
  - kind: Role
    apiVersion: rbac.authorization.k8s.io/v1
    metadata:
      labels:
        provider: codeready-toolchain
      name: registration-service
      namespace: ${NAMESPACE}
    rules:
      - apiGroups:
          - toolchain.dev.openshift.com
        resources:
          - usersignups
        verbs:
          - create
          - get
          - update
          - list
          - watch
      - apiGroups:
          - toolchain.dev.openshift.com
        resources:
          - masteruserrecords
          - socialevents
          - spacebindings
          - spaces
          - toolchainconfigs
          - toolchainstatuses
          - proxyplugins
          - nstemplatetiers
        verbs:
          - get
          - list
          - watch
      - apiGroups:
          - toolchain.dev.openshift.com
        resources:
          - bannedusers
          - toolchainclusters
        verbs:
          - get
          - list
      - apiGroups:
          - ""
        resources:
          - secrets
          - configmaps
        verbs:
          - get
          - list
  - kind: RoleBinding
    apiVersion: rbac.authorization.k8s.io/v1
    metadata:
      labels:
        provider: codeready-toolchain
      name: registration-service
      namespace: ${NAMESPACE}
    subjects:
      - kind: ServiceAccount
        name: registration-service
    roleRef:
      kind: Role
      name: registration-service
      apiGroup: rbac.authorization.k8s.io
  - kind: Deployment
    apiVersion: apps/v1
    metadata:
      labels:
        provider: codeready-toolchain
      name: registration-service
      namespace: ${NAMESPACE}
    spec:
      replicas: ${{REPLICAS}}
      selector:
        matchLabels:
          name: registration-service
      template:
        metadata:
          labels:
            name: registration-service
            run: registration-service
        spec:
          serviceAccountName: registration-service
          containers:
            - name: registration-service
              image: ${IMAGE}
              ports:
                - containerPort: 8080
                - containerPort: 8081
                - containerPort: 8082
                  name: metrics
              command:
                - registration-service
              imagePullPolicy: IfNotPresent
              livenessProbe:
                failureThreshold: 3
                httpGet:
                  path: /api/v1/health
                  port: 8080
                  scheme: HTTP
                initialDelaySeconds: 1
                periodSeconds: 10
                successThreshold: 1
                timeoutSeconds: 1
              readinessProbe:
                failureThreshold: 1
                httpGet:
                  path: /api/v1/health
                  port: 8080
                  scheme: HTTP
                initialDelaySeconds: 1
                periodSeconds: 1
                successThreshold: 1
                timeoutSeconds: 1
              startupProbe:
                failureThreshold: 180
                httpGet:
                  path: /api/v1/health
                  port: 8080
                  scheme: HTTP
                initialDelaySeconds: 1
                periodSeconds: 1
                successThreshold: 1
                timeoutSeconds: 1
              env:
                - name: WATCH_NAMESPACE
                  value: ${NAMESPACE}
              resources:
                requests:
                  cpu: "50m"
                  memory: "100M"
  - kind: Service
    apiVersion: v1
    metadata:
      name: registration-service
      namespace: ${NAMESPACE}
      labels:
        provider: codeready-toolchain
        run: registration-service
    spec:
      ports:
        - name: "8080"
          protocol: TCP
          port: 80
          targetPort: 8080
      selector:
        run: registration-service
      type: ClusterIP
      sessionAffinity: null
  - kind: Route
    apiVersion: v1
    metadata:
      labels:
        provider: codeready-toolchain
        run: registration-service
      name: registration-service
      namespace: ${NAMESPACE}
    spec:
      host: ''
      port:
        targetPort: "8080"
      to:
        kind: Service
        name: registration-service
        weight: 100
      tls:
        termination: edge
      wildcardPolicy: None
  - kind: Service
    apiVersion: v1
    metadata:
      name: api
      namespace: ${NAMESPACE}
      labels:
        provider: codeready-toolchain
        run: registration-service
    spec:
      ports:
        - name: "8081"
          protocol: TCP
          port: 80
          targetPort: 8081
      selector:
        run: registration-service
      type: ClusterIP
      sessionAffinity: null
  - kind: Route
    apiVersion: v1
    metadata:
      labels:
        provider: codeready-toolchain
        run: registration-service
      annotations:
        haproxy.router.openshift.io/timeout: 24h
      name: api
      namespace: ${NAMESPACE}
    spec:
      host: ''
      port:
        targetPort: "8081"
      to:
        kind: Service
        name: api
        weight: 100
      tls:
        termination: edge
      wildcardPolicy: None
  - kind: Service
    apiVersion: v1
    metadata:
      name: proxy-metrics-service
      namespace: ${NAMESPACE}
      labels:
        provider: codeready-toolchain
        run: proxy-metrics
    spec:
      ports:
        - name: proxy-metrics
          protocol: TCP
          port: 80
          targetPort: metrics
      selector:
        run: registration-service
      type: ClusterIP
      sessionAffinity: null
parameters:
  - name: NAMESPACE
    value: 'toolchain-host-operator'
  - name: IMAGE
    value: quay.io/openshiftio/codeready-toolchain/registration-service:latest
  - name: REPLICAS
    value: '3'
